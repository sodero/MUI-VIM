; Vim
; $VER: Vim 9.1

(set @app-name "Vim")
(set @default-dest (getassign "VIM"))
(set #root "")

;---------------------------------------------------------------------------------------------------------------------------------------------
; Workaround for bug in MorphOS Installer, cut trailing '/'.
;---------------------------------------------------------------------------------------------------------------------------------------------
(procedure p_chomp path
    (if (= "/" (substr path (- (strlen path) 1)))
        (set path (substr path 0 (- (strlen path) 1)))
    )
    (cat path)
)

;---------------------------------------------------------------------------------------------------------------------------------------------
; If this is a fresh install, default destination is T:, VIM:// otherwise.
;---------------------------------------------------------------------------------------------------------------------------------------------
(set @default-dest (p_chomp (expandpath @default-dest)))
(set @default-dest ("%s///" @default-dest))

(if (= (exists @default-dest) 2)
    (set @default-dest (expandpath @default-dest))
    (set @default-dest "T:")
)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Strings
;---------------------------------------------------------------------------------------------------------------------------------------------
(set #grey_str_c1 "Mason")
(set #grey_str_c2 "Grey and dull")

(if (= @language "svenska")
    (
        (set #welcome_str_p "Installation av Vim")
        (set #destination_str_p "Vänligen välj var Vim ska installeras.\nKatalogen \"Vim\" kommer att skapas där.")
        (set #destination_str_h "")
        (set #copy_str_p "Kopierar program och programdata...")
        (set #toolbar_str_p "Vänligen välj knappradstema")
        (set #assign_str_p "Skapa tilldelning och utöka sökvägen i \"user-startup\"?")
        (set #assign_str_h "")
        (set #install_str_p "Vänligen välj vilka / vilken variant(er) av Vim som ska installeras")
        (set #install_str_h "")
        (set #gvim_str "gVim - Full Vim med GUI")
        (set #vi_str "Vi - Endast konsollgränssnitt")
        (set #egvim_str "egVim - Lägeslös 'easy' Vim med GUI")
    )
    ; else
    (
        (set #welcome_str_p "Welcome to the Vim installer")
        (set #destination_str_p "Please choose a location for installing Vim.\nA drawer called \"Vim\" will be created there.")
        (set #destination_str_h "")
        (set #copy_str_p "Copying executables and runtime data...")
        (set #toolbar_str_p "Please choose toolbar theme")
        (set #assign_str_p "Create Vim assign and add Vim to path in \"user-startup\"?")
        (set #assign_str_h "")
        (set #install_str_p "Please choose what flavor(s) of Vim to install")
        (set #install_str_h "")
        (set #gvim_str "gVim - Full Vim with GUI")
        (set #vi_str "Vi - Console only interface")
        (set #egvim_str "egVim - Modeless 'easy' Vim with GUI")
    )
)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Welcome
;---------------------------------------------------------------------------------------------------------------------------------------------
(welcome #welcome_str_p)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Choose what to install. Exit if there's nothing to do.
;---------------------------------------------------------------------------------------------------------------------------------------------
(set #gvim 1 #vi 2 #egvim 4)
(set #install
    (askoptions
        (prompt #install_str_p)
        (help #install_str_h)
        (default (bitor #gvim #vi))
        (choices #gvim_str #vi_str #egvim_str)
    )
)
(if (= #install 0)
    (exit (quiet))
)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Choose destination
;---------------------------------------------------------------------------------------------------------------------------------------------
(set #dest-root
    (askdir
        (prompt #destination_str_p)
        (help #destination_str_h)
        (default @default-dest)
    )
)
(set @default-dest #dest-root)
(set @default-dest (tackon @default-dest @app-name))
(complete 20)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Copy drawer icon in archive.
;---------------------------------------------------------------------------------------------------------------------------------------------
(makedir @default-dest (infos))
(if (= (exists ("%s.info" (p_chomp (pathonly @icon)))) 1)
    (copyfiles
        (source ("%s.info" (p_chomp (pathonly @icon))))
        (dest #dest-root)
        (prompt #copy_str_p)
        (help @copyfiles-help)
    )
)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Copy executables and runtime data.
;---------------------------------------------------------------------------------------------------------------------------------------------
(copyfiles
    (source #root)
    (dest @default-dest)
    (prompt #copy_str_p)
    (help @copyfiles-help)
    (infos)
    (all)
    (confirm)
    (optional "force")
)
(complete 44)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Create 'easy' Vim by copying gVim.
;---------------------------------------------------------------------------------------------------------------------------------------------
(if (bitand #install #egvim)
    (copyfiles
        (source (tackon @default-dest "gVim"))
        (dest @default-dest)
        (prompt #copy_str_p)
        (help @copyfiles-help)
        (optional "force")
        (newname "egVim")
        (confirm)
        (infos)
    )
)
(complete 45)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Set file permissions just in case we've used a strange lha for creating the archive.
;---------------------------------------------------------------------------------------------------------------------------------------------
(if (bitand #install #egvim)
    (protect (tackon @default-dest "egVim") "+rwed")
)

(if (bitand #install #gvim)
    (protect (tackon @default-dest "gVim") "+rwed")
)

(if (bitand #install #vi)
    (protect (tackon @default-dest "vi") "+rwed")
)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Clean up redundant files
;---------------------------------------------------------------------------------------------------------------------------------------------
(if (= 0 (bitand #install #gvim))
    (delete (tackon @default-dest "gVim") (infos))
)
(if (= 0 (bitand #install #vi))
    (delete (tackon @default-dest "vi"))
)
(delete (tackon @default-dest "Vim installer") (infos))
(delete (tackon @default-dest "INSTALLATION.txt") (infos))

;---------------------------------------------------------------------------------------------------------------------------------------------
; Workaround for bugs in MorphOS Installer (delete (infos)) is broken, and so
; is (if (exists..), we need to insert the (= ..) to make it work.
;---------------------------------------------------------------------------------------------------------------------------------------------
(if (= (exists (tackon @default-dest "Vim installer.info")) 1)
    (delete (tackon @default-dest "Vim installer.info"))
)
(complete 50)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Select toolbar
;---------------------------------------------------------------------------------------------------------------------------------------------
(if (or (bitand #install #gvim) (bitand #install #egvim))
    (set #toolbar
        (askchoice
            (prompt #toolbar_str_p)
            (help @askchoice-help)
            (choices #grey_str_c1 #grey_str_c2)
            (default 0)
        )
    )
    ;else
    (set #toolbar 0)
)
(complete 60)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Remove default (unpack and run) toolbar
;---------------------------------------------------------------------------------------------------------------------------------------------
(delete
    (tackon @default-dest "runtime/icons/tb_#?strip.png")
    (optional "force")
    (all)
)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Put the selected toolbar in place
;---------------------------------------------------------------------------------------------------------------------------------------------
(if (<> 0 #toolbar)
    (
        ; Grey
        (delete
            (tackon @default-dest "runtime/icons/tb_#?mason.png")
            (all)
        )
        (rename
            (tackon @default-dest "runtime/icons/tb_strip_grey.png")
            (tackon @default-dest "runtime/icons/tb_strip.png")
        )
        (rename
            (tackon @default-dest "runtime/icons/tb_sel_strip_grey.png")
            (tackon @default-dest "runtime/icons/tb_sel_strip.png")
        )
        (rename
            (tackon @default-dest "runtime/icons/tb_dis_strip_grey.png")
            (tackon @default-dest "runtime/icons/tb_dis_strip.png")
        )
    )
    ; else
    (
        ; Mason
        (delete
            (tackon @default-dest "runtime/icons/tb_#?grey.png")
            (all)
        )
        (rename
            (tackon @default-dest "runtime/icons/tb_strip_mason.png")
            (tackon @default-dest "runtime/icons/tb_strip.png")
        )
        (rename
            (tackon @default-dest "runtime/icons/tb_sel_strip_mason.png")
            (tackon @default-dest "runtime/icons/tb_sel_strip.png")
        )
        (rename
            (tackon @default-dest "runtime/icons/tb_dis_strip_mason.png")
            (tackon @default-dest "runtime/icons/tb_dis_strip.png")
        )

    )
)
(complete 80)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Create Vim assign / add Vim to path in user-startup
;---------------------------------------------------------------------------------------------------------------------------------------------
(set #assign-dir (tackon @default-dest "runtime"))
(startup @app-name
    (prompt #assign_str_p)
    (help #assign_str_h)
    (command ("Assign %s: \"%s\"\nPath ADD >NIL: \"%s\"" @app-name #assign-dir @default-dest))
    (confirm)
)
(complete 90)

;---------------------------------------------------------------------------------------------------------------------------------------------
; Run assign to be able to run Vim without a reboot. Add Vim to path (using an assign) as well.
;---------------------------------------------------------------------------------------------------------------------------------------------
(run (cat "assign VIM: " #assign-dir))
(run (cat "assign ADD C: " @default-dest))
(complete 100)
